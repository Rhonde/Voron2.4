############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------

[include SO3_toolhead.cfg]

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
# We can declare an "inductive_virtual" probe type as it's pretty close to the Beacon way of working and should just work!
variable_probe_type_enabled: "inductive_virtual"
variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "extruder_heating", "purge", "clean", "custom1", "z_offset", "bedmesh", "primeline"
gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

[extruder]
sensor_type: ATC Semitec 104NT-4-R025H42G
min_temp: -50
max_temp: 300
pressure_advance: 0.035
pressure_advance_smooth_time: 0.040
rotation_distance: 47.674
max_extrude_only_distance: 300
control: pid
pid_kp: 28.745
pid_ki: 3.362
pid_kd: 61.442

[heater_bed]
control: pid
pid_kp: 36.280
pid_ki: 1.336
pid_kd: 246.250

#-------------------------#
#   Height                #
#-------------------------#

[stepper_z]
position_max: 330

#-------------------------#
#   Limits                #
#-------------------------#
[printer]
max_velocity = 600
max_accel = 24000
max_z_velocity = 30
max_z_accel = 500

#-------------------------#
#   RUN CURRENT           #
#-------------------------#
# [tmc2209 stepper_x]
# run_current: 0.8

# [tmc2209 stepper_y]
# run_current: 0.8

#-------------------------#
#   QGL                   #
#-------------------------#

[quad_gantry_level]
horizontal_move_z: 2
retries: 10
retry_tolerance: 0.0075
max_adjust: 10


#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.

[stepper_x]
dir_pin: !X_DIR

[stepper_y]
dir_pin: !Y_DIR

[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR

#-------------------------#
#   Centering             #
#-------------------------#

[stepper_y]
position_min: 0
position_max: 353
position_endstop: 353

#-------------------------#
#   Probe                 #
#-------------------------#

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_8D4C90244E5737374D202020FF0A0E16-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 22 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
z_settling_time:500

[beacon model default]
model_coef = 1.4427946907344735,
	  1.787669584678867,
	  0.7859875205786713,
	  0.26454766546341635,
	  0.3511573901180469,
	  0.7620920554597368,
	  -0.08216265727863667,
	  -0.7679450296148179,
	  0.10175910595398337,
	  0.3561293718968539
model_domain = 1.8130794610109464e-07,1.9287717233496638e-07
model_range = 0.200000,5.000000
model_temp = 60.438855
model_offset = 0.720 #increase to increase nozzle height, decrease to lower nozzle height

[bed_mesh]
mesh_max:300,300

#-------------------------#
#   Input Shaper          #
#-------------------------#

[resonance_tester]
accel_chip: beacon
probe_points: 175, 175, 20
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

[input_shaper]
# Supported shapers: zv, mzv, zvd, ei, 2hump_ei, 3hump_ei
shaper_freq_x: 54.2
shaper_type_x: mzv
shaper_freq_y: 37.2
shaper_type_y: mzv

#-------------------------#
#   Skew                  #
#-------------------------#
[skew_correction]

[skew_correction CaliFlower]
xy_skew = 0.0008036975427409686
xz_skew = 0.0
yz_skew = 0.0

[gcode_macro _MODULE_CUSTOM1]
  gcode:
    SKEW_PROFILE LOAD=CaliFlower
    
#----------------------------------#
#    FAN                           #
#----------------------------------#

#[fan_generic  MCU_FAN]
#pin: PF6
#max_power: 1.0
#shutdown_speed: 0
#cycle_time: 0.010
#hardware_pwm: true
#kick_start_time: 0.100
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:

#[temperature_fan MCU_fan]
#sensor_type: temperature_host #This is what the Pi3's Temperature sensor is known as.
#pin: MCU_FAN2                      #Set this to your fan pin
#max_temp: 80.0                #Set below 85C, Pi3+ MCU can be damaged at 85C
#target_temp: 10.0             #S.B. 40, Set this to your preferred running temperature
#min_temp: 0
#shutdown_speed: 0.0
#kick_start_time: 0.5
#off_below: 0.19
#max_speed: 1.0
#min_speed: 0.0
#control: pid
#pid_Kp: 2.0
#pid_Ki: 5.0
#pid_Kd: 0.5
#pid_deriv_time: 2.0



